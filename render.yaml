# This file tells Render how to build and deploy your application.
# For more details, see the Render documentation: https://render.com/docs/yaml-spec

services:
  # 1. PostgreSQL Database
  # A managed PostgreSQL database for your application.
  - type: db
    name: dialer-db
    databaseName: dialer_db
    plan: free
    postgres:
      version: 14

  # 2. Redis Cache
  # A managed Redis instance for caching and queues.
  - type: redis
    name: dialer-redis
    plan: free
    ipAllowList: [] # Allows access from other services in your Render account

  # 3. Backend API (NestJS)
  # This service builds and runs the backend API from its Dockerfile.
  - type: web
    name: api
    plan: free
    runtime: docker
    dockerfilePath: ./Dockerfile.api
    healthCheckPath: /
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: dialer-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: dialer-redis
          property: connectionString
      # --- Secrets (set in Render UI) ---
      - key: JWT_SECRET
        generateValue: true
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_PHONE_NUMBER
        sync: false
      - key: OPENAI_API_KEY
        sync: false

  # 4. Frontend Web App (React + Vite)
  # A web service that builds the React frontend and serves it via a static server.
  - type: static
    name: web
    plan: free
    buildCommand: |
      npm install
      npm run build --workspace=apps/web
    publishDir: ./apps/web/dist
    routes:
      # Proxy /api requests to the backend service.
      # The .onrender.com URL is created automatically.
      - type: rewrite
        source: /api/:path*
        destination: https://api.onrender.com/:path*
      # Rewrite all other requests to index.html for React Router.
      - type: rewrite
        source: /*
        destination: /index.html 